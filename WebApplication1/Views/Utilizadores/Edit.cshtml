@model ModelProject.Utilizadores
@using Microsoft.AspNet.Identity
@using ModelProject;

@{
    ViewBag.Title = "Editar";
}

<h2 class="title-page">Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Html.DisplayFor(model => model.Nome)</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group fix-margin">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group fix-margin">
        @Html.LabelFor(model => model.NumCC, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumCC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumCC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group fix-margin">
        @Html.LabelFor(model => model.NumEleitor, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumEleitor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumEleitor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group fix-margin">
        @Html.LabelFor(model => model.Morada, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Morada, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group fix-margin hidden">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group fix-margin">
        @Html.LabelFor(model => model.NomeUtilizador, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomeUtilizador, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomeUtilizador, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Request.IsAuthenticated)
    {
        // Utilizador logado
        var CurrentUserId = User.Identity.GetUserId();

        ProjectDBEntities db = new ProjectDBEntities();

        // Se o utilizador atual existe na BD
        var userCurrent = from u in db.Utilizadores
                          where u.UserID == CurrentUserId
                          select u;

        foreach (var user in userCurrent)
        {
            // Apenas os membros da junta e administradores podem gerir o estado, código postal e tipo de conta dos utilizadores
            if (@user.TipoUtilizador.Tipo == "Administrador" || @user.TipoUtilizador.Tipo == "Membro da Junta")
            {
                <div class="form-group fix-margin">
                    @Html.LabelFor(model => model.IdCodigoPostal, "Codigo Postal", htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
                    <div class="col-md-10">
                        @Html.DropDownList("IdCodigoPostal", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdCodigoPostal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group fix-margin">
                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group fix-margin">
                    @Html.LabelFor(model => model.Tipo, "Tipo", htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
                    <div class="col-md-10">
                        @Html.DropDownList("Tipo", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group fix-margin hidden">
                    @Html.LabelFor(model => model.IdCodigoPostal, "Codigo Postal", htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IdCodigoPostal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IdCodigoPostal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group fix-margin hidden">
                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group fix-margin hidden">
                    @Html.LabelFor(model => model.Tipo, "Tipo", htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
                    <div class="col-md-10">
                        @Html.DropDownList("Tipo", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
    }

    <div class="form-group hidden">
        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2 table-edit-data" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">
                <i class="fa fa-check"></i> Atualizar
            </button>
            <a class="btn btn-default" href="/Utilizadores"><i class="fa fa-list"></i> Voltar à lista</a>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
